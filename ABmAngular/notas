-No vamos a utilizar mas los archivos ".php", a partir de ahora van a ser todos html, y la logica va a estar en los js de angular.
-a travez de angular vamos a controlar los html
-cada html esta asociado a 1 controller (podria estar asociado a mas) 
-las directivas que comienzan con "ng" son de angular
-las validaciones ahora se van a hacer en el html. al js ya van a llegar validados
-las dos manetas de mostrar los datos del modelo es con {{}} o mediante bindeo con la directiva ng-model


************************************************************************************************************
Link: https://www.mockaroo.com/ generador de data test en formato JSON (entre otros)
Link: http://www.mocky.io/ : simula el Api rest que retorna el JSON que genera el link anterior.
Extension de google "CORS" -> para permitir el mocky desde otro server. (HTACCES) y evitar el error "Allow-origin" en console (F12)
El parametro del controller "$http", cumple la función de asociarle el link que retorna el JSON.
Ej.: $http.get('http://www.mocky.io/v2/57c8ab92120000e613e76a8e').

.then() es la funcion que escucha el callback de la llamada asincronica (recibe una funcion) ->recibe 2 parametros!!(las dos funciones bien o mal, las mismas pueden llevar o no nombre asignado).	

Investigar el resto de los metodos ademas del $http.get.

ng-if = crear o destruir objetos
ng-show= mostrar u ocultar objetos (tipo "only read")
ng-disabled= mostrar (deshabilitado)

Form State and INput State (Angular Validation -w3school-)

******************************************************************************************
CLASE SIGUIENTE: traer dos formularios (Login -validar pass min 7char, Alta)

Form Alta (datos)- SOLO VALIDAR mediante ANGULAR (sin consultar con base de datos)
-Nombre
-Apellido
-Eddad (number min y max)
-Sexo (radio)
-Dni (number)
-Mail (email)
-Estado (option-select)
-Fecha nacimiento (fecha actual)
-CLave (password)
-Copia clave (password)
-Lenguaje de Programación (checkbox)- sarasa
Por defecto- todos deben estar en "error" (obligacion de completar por el usuario)

Cambiar el estado de un objeto desde el controller
OBJETIVO: a partir de los ejercicios de Curso de Ingreso (tps Sala de Juego), generar un login y un form alta.
			La idea es que el usuario pueda ingresar y elegir el juego, una vez elegido sea identificado por puntaje (tabla de puntaje) de entre todos los usuarios registrados.

ng-spiner: es el botón cargando cuando se dispara el evento (ej.: click) hasta que retorna la respuesta del servidor (averiguar w3school)